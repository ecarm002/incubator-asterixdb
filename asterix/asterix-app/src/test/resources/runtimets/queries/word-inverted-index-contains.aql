drop dataverse test if exists;
create dataverse test;
use dataverse test;

create type MyRecord as closed {
  id: int32,
  point: point,
  kwds: string,
  line1: line,
  line2: line,
  poly1: polygon,
  poly2: polygon,
  rec: rectangle
}

create nodegroup group1  if not exists on nc1;

create dataset MyData(MyRecord)
  partitioned by key id on group1;

load dataset MyData 
using "edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter"
(("path"="nc1://data/spatial/spatialData.json"),("format"="adm")) pre-sorted;

create index keyword_index on MyData(kwds) type keyword;

write output to nc1:"rttest/word-inverted-index-contains.adm";

for $o in dataset('MyData')
where contains($o.kwds, 'factory')
return $o